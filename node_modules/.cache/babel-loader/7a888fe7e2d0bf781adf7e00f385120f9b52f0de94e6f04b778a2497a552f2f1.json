{"ast":null,"code":"import { useConstant } from '../utils/use-constant.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useComputed } from './use-computed.mjs';\nimport { transform } from '../../../../motion-dom/dist/es/utils/transform.mjs';\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  if (typeof input === \"function\") {\n    return useComputed(input);\n  }\n  const transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n  const latest = useConstant(() => []);\n  return useCombineMotionValues(values, () => {\n    latest.length = 0;\n    const numValues = values.length;\n    for (let i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n    return transformer(latest);\n  });\n}\nexport { useTransform };","map":{"version":3,"names":["useConstant","useCombineMotionValues","useComputed","transform","useTransform","input","inputRangeOrTransformer","outputRange","options","transformer","Array","isArray","useListTransform","latest","values","length","numValues","i","get"],"sources":["/Users/macpro/Desktop/Projects/React/finz-mvp/node_modules/motion/dist/es/framer-motion/dist/es/value/use-transform.mjs"],"sourcesContent":["import { useConstant } from '../utils/use-constant.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useComputed } from './use-computed.mjs';\nimport { transform } from '../../../../motion-dom/dist/es/utils/transform.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,2BAA2B;AACvD,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,SAAS,QAAQ,oDAAoD;AAE9E,SAASC,YAAYA,CAACC,KAAK,EAAEC,uBAAuB,EAAEC,WAAW,EAAEC,OAAO,EAAE;EACxE,IAAI,OAAOH,KAAK,KAAK,UAAU,EAAE;IAC7B,OAAOH,WAAW,CAACG,KAAK,CAAC;EAC7B;EACA,MAAMI,WAAW,GAAG,OAAOH,uBAAuB,KAAK,UAAU,GAC3DA,uBAAuB,GACvBH,SAAS,CAACG,uBAAuB,EAAEC,WAAW,EAAEC,OAAO,CAAC;EAC9D,OAAOE,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,GACrBO,gBAAgB,CAACP,KAAK,EAAEI,WAAW,CAAC,GACpCG,gBAAgB,CAAC,CAACP,KAAK,CAAC,EAAE,CAAC,CAACQ,MAAM,CAAC,KAAKJ,WAAW,CAACI,MAAM,CAAC,CAAC;AACtE;AACA,SAASD,gBAAgBA,CAACE,MAAM,EAAEL,WAAW,EAAE;EAC3C,MAAMI,MAAM,GAAGb,WAAW,CAAC,MAAM,EAAE,CAAC;EACpC,OAAOC,sBAAsB,CAACa,MAAM,EAAE,MAAM;IACxCD,MAAM,CAACE,MAAM,GAAG,CAAC;IACjB,MAAMC,SAAS,GAAGF,MAAM,CAACC,MAAM;IAC/B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,EAAEC,CAAC,EAAE,EAAE;MAChCJ,MAAM,CAACI,CAAC,CAAC,GAAGH,MAAM,CAACG,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;IAC/B;IACA,OAAOT,WAAW,CAACI,MAAM,CAAC;EAC9B,CAAC,CAAC;AACN;AAEA,SAAST,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}